{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","redux/contacts/contacts-reducer.js","views/PhonebookView.js","views/HomeView.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","views/LoginView.js","views/RegisterView.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivatRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contact","post","then","data","catch","error","deleteContact","contactId","delete","a","get","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useSelector","useDispatch","map","id","type","onClick","operations","onDeleteContact","Form","useState","setName","setNumber","handleChange","e","target","value","resetInput","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","info","onChange","placeholder","Filter","actions","createReducer","_","payload","loading","action","combineReducers","PhonebookView","useEffect","contactsOperations","styles","minHeight","display","alignItems","justifyContent","title","fontWeight","fontSize","textAlign","HomeView","style","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","logOut","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","rejectWithValue","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","form","width","label","flexDirection","marginBottom","section","border","padding","button","borderRadius","background","LoginView","setEmail","password","setPassword","autoComplete","RegisterView","link","textDecoration","marginLeft","color","activeLink","Navigation","to","exact","activeStyle","marginRight","backgroundColor","UserMenu","AuthNav","header","borderBottom","AppBar","PrivatRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","App","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b00b83e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3i19u\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccsess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccsess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccsess',);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoader = state => state.contacts.loading;\n\n// export const getError = state => state.contacts.error;\nconst getTotalContacts = state => {\n  const todos = getContacts(state);\n  return todos.length;\n};\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(\n      ({ name }) => name && name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nconst contactSelectors = {\n  getContacts,\n  getFilter,\n  getLoader,\n  getVisibleContacts,\n  getTotalContacts,\n};\nexport default contactSelectors;\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { toast } from 'react-toastify';\n\nfunction Form() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact =>\n        contact.name && contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`${name} is already in use`);\n    } else if (checkRepeatNumber(number)) {\n      toast(` ${number} is already in use`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(' Enter the correct name and number');\n    } else if (checkValidNumber(number)) {\n      toast.error(' Enter the correct phone number');\n    } else {\n      dispatch(addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              placeholder=\"Andrey Kovsh\"\n            />\n          </label>\n          <label>\n            Phone number\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              placeholder=\"817-18-41\"\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </div>\n      </form>\n    </>\n  );\n}\nexport default Form;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux//contacts/contacts-selectors';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const change = e => dispatch(actions.changeFilter(e.target.value));\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={change} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  \n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactError]: (_, action) => action.payload,\n  [fetchContactRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n  [deleteContactError]: (_, action) => action.payload,\n  [addContactError]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport ContactList from '../components/ContactList/ContactList';\nimport Form from '../components/Form/Form';\nimport Filter from '../components/Filter/Filter';\n\nimport { contactsOperations } from '../redux/contacts';\n\nexport default function PhonebookView() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      <p>Welcome to our Phonebook!</p>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('/users/signup', async credentials => {\n  // console.log(`credentials ${credentials}`);\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // console.log(error);\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // console.log(error);\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('users/logout');\n    token.unset();\n  } catch (error) {\n    // console.log(error);\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n      // return state;\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('users/current');\n      return data;\n    } catch (error) {\n      // console.log(error);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\n\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsFetchingCurrent,\n};\n\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n  section: {\n    border: ' 2px solid white',\n    padding: 30,\n  },\n  button: {\n    fontSize: 15,\n    fontWeight: 700,\n    borderRadius: 10,\n    padding: 10,\n    background: 'white',\n  },\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div style={styles.section}>\n      <h1>Log in</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" style={styles.button}>\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n  section: {\n    border: ' 2px solid white',\n    padding: 30,\n  },\n  button: {\n    fontSize: 15,\n    fontWeight: 700,\n    borderRadius: 10,\n    padding: 10,\n    background: 'white',\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div style={styles.section}>\n      <h1>Create account</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"on\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" style={styles.button}>\n          Sign up\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    fontSize: '20px',\n    display: 'inline-block',\n    textDecoration: 'none',\n    marginLeft: 25,\n    padding: 12,\n    fontWeight: 700,\n    color: 'orangered',\n  },\n  activeLink: {\n    color: 'rgb(10, 210, 10)',\n  },\n};\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Homepage\n      </NavLink>\n\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: 25,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 15,\n    color: 'rgb(10, 210, 10)',\n  },\n  button: {\n    fontSize: 20,\n    fontWeight: 700,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>Welcome, {name}</span>\n      <button\n        type=\"button\"\n        style={styles.button}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    marginRight: 20,\n    fontSize: 20,\n    fontWeight: 700,\n    color: 'orangered',\n  },\n  activeLink: {\n    color: 'rgb(10, 210, 10)',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Sign up\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Log in\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '2px solid orangered',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PrivatRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from './components/Container';\nimport PhonebookView from './views/PhonebookView';\nimport HomeView from './views/HomeView';\nimport LoginView from './views/LoginView';\nimport RegisterView from './views/RegisterView';\nimport AppBar from './components/AppBar';\nimport { authOperations, authSelectors } from './redux/auth';\nimport { Switch } from 'react-router-dom';\nimport PrivatRoute from './components/PrivatRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ToastContainer } from 'react-toastify';\n\nimport './App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n        <Container>\n          <AppBar />\n          <Switch>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute exact path=\"/register\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute exact path=\"/login\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivatRoute>\n              <PhonebookView path=\"/contacts\" />\n            </PrivatRoute>\n          </Switch>\n        </Container>\n      </>\n    )\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}